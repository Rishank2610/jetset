name: Test CI/CD jetset

on:
  workflow_dispatch:
    inputs:
      git-ref:
        description: Git Ref (Optional)
        required: false
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-10.15]
        python-version: [3.7]

    steps:
      - name: Clone Repository (Latest)
        uses: actions/checkout@v2

      - name: Clone Repository (Custom Ref)
        uses: actions/checkout@v2
        if: github.event.inputs.git-ref != ''
        with:
          ref: ${{ github.event.inputs.git-ref }}

     # - name: Set env TEST
     #   run: echo "::set-env name=TEST::$(cat test-path.txt)"

     # - name: Print env TEST
     #   run: |
     #     echo "TEST=${TEST}"
     #     printenv

     # - uses: actions/upload-artifact@v2
     #   with:
     #     name: ${{ matrix.os }}-TEST
     #     path: ${{ env.TEST }}

      - name: Setup conda
        uses: s-weigand/setup-conda@v1
        with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge,astropy

      - name: Install dependencies
        run: |
          conda config --set always_yes yes
          conda install conda-build
          conda install -c conda-forge emcee">=3.0.0"
          conda install -c astropy --file requirements.txt
          conda install  pytest

      - name: build
        run: |
          python setup.py clean
          python setup.py install > install.log 2>install.err

      #- name: test
      #  run: |
      #    pytest --pyargs jetset.tests.test_functions::test_short

      - name: Set env PKG_VERSION
        run: echo "::set-env name=PKG_VERSION::$(cd ../../ && python -c "import jetset;print(jetset.__version__)")"

      - name: Print env PKG_VERSION
        run: |
          echo "PKG_VERSION=${PKG_VERSION}"
          printenv

      - name: Set env JETSETBESSELBUILD
        run:
          echo "::set-env name=JETSETBESSELBUILD::FALSE"


      - name: Print env JETSETBESSELBUILD
        run: |
          echo "JETSETBESSELBUILD=${JETSETBESSELBUILD}"
          printenv

      - name: conda build
        working-directory: ./CICD/conda-pipeline/github/
        run: |
          conda config --set anaconda_upload no
          conda build purge
          conda build .  -c defaults -c astropy -c conda-forge > build.log 2>build.err
          conda-build . --output > ./CONDABUILDJETSET.txt

      - name: Set env CONDABUILDJETSET
        working-directory: ./CICD/conda-pipeline/github/
        run:  echo "::set-env name=CONDABUILDJETSET::$(cat CONDABUILDJETSET.txt)"

      - name: Printenv CONDABUILDJETSET
        run: |
          echo "CONDABUILDJETSET=${CONDABUILDJETSET}"
          printenv


      - uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }}-${{ env.PKG_VERSION }}-package
          path: ${{ env.CONDABUILDJETSET }}

