addons:
  artifacts:
    # ...
    debug: true

branches:
    only:
        - never


sudo: required
language: generic
services:
  - docker

os:
  - linux
  - osx



env:
  # Build and tests package on all supported python version
  - BUILD_TARGET=3.7
  # BUILD_TARGET=3.6
  #- BUILD_TARGET=2.7


install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then MINICONDA_OS=Linux; else MINICONDA_OS=MacOSX; fi
  - wget https://repo.anaconda.com/miniconda/Miniconda3-latest-$MINICONDA_OS-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p "$HOME"/miniconda
  - source "$HOME"/miniconda/etc/profile.d/conda.sh
  - conda config --set always_yes yes
  - conda install conda-build


script:
  - conda config --set anaconda_upload no
  #- conda build conda-pipeline --python=$BUILD_TARGET
  - echo $PWD
  - echo $HOME
  - mkdir dist
  - mkdir dist/$BUILD_TARGET
  - ls
  #- mkdir dist/3.6
  #- mkdir dist/3.4
  #- mkdir dist/2.7
  - conda config --set anaconda_upload no
  - conda build conda-pipeline --python=$BUILD_TARGET
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then OS_FLAG=Linux; else OS_FLAG=osx-64; fi
  - cp /Users/travis/miniconda/conda-bld/$OS_FLAG/* dist/$BUILD_TARGET
  - ls dist/$BUILD_TARGET
  - tar -zcvf dist_$BUILD_TARGET.tar.gz dist/$BUILD_TARGET
  - ls


  #- conda activate
  #- python scripts/run_tests.py --format-only

#after_success:
#  - codecov

deploy:
  provider: releases
  skip_cleanup: true
  api_key: ${api_key}
  file_glob: true
  file:
    - "dist*.tar.gz"
  on:
    tags: False
    all_branches: False
    branch: develop

